[package]
name = "serde-generate"
version = "0.24.0"
description = "Generate (de)serialization code in multiple languages"
documentation = "https://docs.rs/serde-generate"
repository = "https://github.com/zefchain/serde-reflection"
authors = ["Mathieu Baudet <mathieu.baudet@zefchain.com>"]
license = "MIT OR Apache-2.0"
readme = "README.md"
keywords = ["data-structures", "serialization", "serde"]
categories = ["encoding", "development-tools"]
edition = "2021"
rust-version = "1.60"
exclude = [
    # Readme template that doesn't need to be included.
    "README.tpl",
]
autotests = false

[dependencies]
heck = "0.3.2"
include_dir = { version = "0.6.0", optional = true }
serde = { version = "1.0.126", features = ["derive"] }
textwrap = "0.13.4"
phf = { version = "0.10", features = ["macros"], optional = true }
serde-reflection = { path = "../serde-reflection", version = "0.3.6" }

[dev-dependencies]
hex = "0.4.3"
lazy_static = "1.4.0"
regex = "1.5.5"
tempfile = "3.2.0"
which = "4.1.0"
serde_bytes = "0.11.5"
serde_yaml = "0.8.17"
bincode = "1.3.3"
bcs = "0.1.3"
maplit = "1.0.2"

[features]
default = ["cpp", "csharp", "dart", "golang", "java", "ocaml", "python3", "rust", "swift", "typescript"]
cpp = []
csharp = ["include_dir"]
dart = ["include_dir"]
golang = []
java = ["include_dir"]
ocaml = ["phf", "include_dir"]
python3 = []
rust = []
swift = ["include_dir"]
typescript = ["include_dir"]

[[test]]
name = "integration_tests"
path = "tests/lib.rs"
harness = true
